defmodule Sketch.CanvasTest do
  # NOTE: I strongly recommend toggling soft wrap in your editor for this module.
  use ExUnit.Case, async: true
  alias Sketch.Canvas
  alias Sketch.Canvas.{Rectangle,Flood}

  setup do
    canvas = Canvas.new()
    {:ok, canvas: canvas}
  end

  test "empty canvas creation" do
    # given
    expected_canvas = %{
          0 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          1 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          2 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          3 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          4 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          5 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          6 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          7 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          8 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          9 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          10 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
          11 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""}
        }
    # when
    result = Canvas.new()
    # then
    assert result == expected_canvas
  end

  test "drawing rectangles (Test fixture 1)", %{canvas: canvas} do
    # given
    expected_canvas = %{
      0 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      1 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      2 => %{0 => "", 1 => "", 2 => "", 3 => "@", 4 => "@", 5 => "@", 6 => "@", 7 => "@", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      3 => %{0 => "", 1 => "", 2 => "", 3 => "@", 4 => "X", 5 => "X", 6 => "X", 7 => "@", 8 => "", 9 => "", 10 => "X", 11 => "X", 12 => "X", 13 => "X", 14 => "X", 15 => "X", 16 => "X", 17 => "X", 18 => "X", 19 => "X", 20 => "X", 21 => "X", 22 => "X", 23 => "X", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      4 => %{0 => "", 1 => "", 2 => "", 3 => "@", 4 => "@", 5 => "@", 6 => "@", 7 => "@", 8 => "", 9 => "", 10 => "X", 11 => "O", 12 => "O", 13 => "O", 14 => "O", 15 => "O", 16 => "O", 17 => "O", 18 => "O", 19 => "O", 20 => "O", 21 => "O", 22 => "O", 23 => "X", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      5 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "X", 11 => "O", 12 => "O", 13 => "O", 14 => "O", 15 => "O", 16 => "O", 17 => "O", 18 => "O", 19 => "O", 20 => "O", 21 => "O", 22 => "O", 23 => "X", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      6 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "X", 11 => "O", 12 => "O", 13 => "O", 14 => "O", 15 => "O", 16 => "O", 17 => "O", 18 => "O", 19 => "O", 20 => "O", 21 => "O", 22 => "O", 23 => "X", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      7 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "X", 11 => "O", 12 => "O", 13 => "O", 14 => "O", 15 => "O", 16 => "O", 17 => "O", 18 => "O", 19 => "O", 20 => "O", 21 => "O", 22 => "O", 23 => "X", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      8 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "X", 11 => "X", 12 => "X", 13 => "X", 14 => "X", 15 => "X", 16 => "X", 17 => "X", 18 => "X", 19 => "X", 20 => "X", 21 => "X", 22 => "X", 23 => "X", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      9 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      10 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      11 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""}
    }
    # when
    result =
      canvas
      # Rectangle at [3,2] with width: 5, height: 3, outline character: `@`, fill character: `X`
      |> Rectangle.draw(3, 2, 5, 3, "@", "X")
      # Rectangle at [10, 3] with width: 14, height: 6, outline character: `X`, fill character: `O`
      |> Rectangle.draw(10, 3, 14, 6, "X", "O")
    # then
    assert result == expected_canvas
  end

  test "drawing a rectangle (Test fixture 2)", %{canvas: canvas} do
    # given
    expected_canvas = %{
      0 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      1 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      2 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      3 => %{0 => "O", 1 => "O", 2 => "O", 3 => "O", 4 => "O", 5 => "O", 6 => "O", 7 => "O", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      4 => %{0 => "O", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "O", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      5 => %{0 => "O", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "X", 6 => "X", 7 => "X", 8 => "X", 9 => "X", 10 => "", 11 => "", 12 => "", 13 => "", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      6 => %{0 => "O", 1 => "O", 2 => "O", 3 => "O", 4 => "O", 5 => "X", 6 => "X", 7 => "X", 8 => "X", 9 => "X", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      7 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "X", 6 => "X", 7 => "X", 8 => "X", 9 => "X", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      8 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      9 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      10 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""},
      11 => %{0 => "", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "", 8 => "", 9 => "", 10 => "", 11 => "", 12 => "", 13 => "", 14 => "", 15 => "", 16 => "", 17 => "", 18 => "", 19 => "", 20 => "", 21 => "", 22 => "", 23 => "", 24 => "", 25 => "", 26 => "", 27 => "", 28 => "", 29 => "", 30 => "", 31 => ""}
    }
    # when
    result =
      canvas
      # Rectangle at `[14, 0]` with width `7`, height `6`, outline character: none, fill: `.`
      |> Rectangle.draw(14, 0, 7, 6, nil, ".")
      # Rectangle at `[0, 3]` with width `8`, height `4`, outline character: `O`, fill: `none`
      |> Rectangle.draw(0, 3, 8, 4, "O", nil)
      # Rectangle at `[5, 5]` with width `5`, height `3`, outline character: `X`, fill: `X`
      |> Rectangle.draw(5, 5, 5, 3, "X", "X")
    # then
    assert result == expected_canvas
  end

  test "drawing a rectangle (Test fixture 3)", %{canvas: canvas} do
    # given
    expected_canvas = %{
      0 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      1 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      2 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      3 => %{0 => "O", 1 => "O", 2 => "O", 3 => "O", 4 => "O", 5 => "O", 6 => "O", 7 => "O", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      4 => %{0 => "O", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "", 7 => "O", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      5 => %{0 => "O", 1 => "", 2 => "", 3 => "", 4 => "", 5 => "X", 6 => "X", 7 => "X", 8 => "X", 9 => "X", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => ".", 15 => ".", 16 => ".", 17 => ".", 18 => ".", 19 => ".", 20 => ".", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      6 => %{0 => "O", 1 => "O", 2 => "O", 3 => "O", 4 => "O", 5 => "X", 6 => "X", 7 => "X", 8 => "X", 9 => "X", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => "-", 15 => "-", 16 => "-", 17 => "-", 18 => "-", 19 => "-", 20 => "-", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      7 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "X", 6 => "X", 7 => "X", 8 => "X", 9 => "X", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => "-", 15 => "-", 16 => "-", 17 => "-", 18 => "-", 19 => "-", 20 => "-", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      8 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => "-", 15 => "-", 16 => "-", 17 => "-", 18 => "-", 19 => "-", 20 => "-", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      9 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => "-", 15 => "-", 16 => "-", 17 => "-", 18 => "-", 19 => "-", 20 => "-", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      10 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => "-", 15 => "-", 16 => "-", 17 => "-", 18 => "-", 19 => "-", 20 => "-", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"},
      11 => %{0 => "-", 1 => "-", 2 => "-", 3 => "-", 4 => "-", 5 => "-", 6 => "-", 7 => "-", 8 => "-", 9 => "-", 10 => "-", 11 => "-", 12 => "-", 13 => "-", 14 => "-", 15 => "-", 16 => "-", 17 => "-", 18 => "-", 19 => "-", 20 => "-", 21 => "-", 22 => "-", 23 => "-", 24 => "-", 25 => "-", 26 => "-", 27 => "-", 28 => "-", 29 => "-", 30 => "-", 31 => "-"}
    }
    # when
    result =
      canvas
      # Rectangle at `[14, 0]` with width `7`, height `6`, outline character: none, fill: `.`
      |> Rectangle.draw(14, 0, 7, 6, nil, ".")
      # Rectangle at `[0, 3]` with width `8`, height `4`, outline character: `O`, fill: `none`
      |> Rectangle.draw(0, 3, 8, 4, "O", nil)
      # Rectangle at `[5, 5]` with width `5`, height `3`, outline character: `X`, fill: `X`
      |> Rectangle.draw(5, 5, 5, 3, "X", "X")
      # Flood fill at `[0, 0]` with fill character `-` (canvas presented in 32x12 size)
      |> Flood.fill(0, 0, "-")
    # then
    assert result == expected_canvas
  end
end
